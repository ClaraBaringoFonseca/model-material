/* Used used the statements below to import */

COPY public.reference
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Reference/REFERENCE.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.entity
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Entity/ENTITY.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.agent
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Agent/AGENT.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.digital_entity
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Digital_entity/DIGITAL_ENTITY.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.material_entity
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Material_entity/MATERIAL_ENTITY.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.agent_relationship
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Agent relationship/AGENT_RELATIONSHIP.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.taxon(taxon_id, scientific_name, scientific_name_authorship, name_according_to, name_according_to_id, taxon_rank, taxon_source, scientific_name_id, taxon_remarks, parent_taxon_id, taxonomic_status)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Taxon/TAXON.csv' 
DELIMITER ',' 
CSV HEADER;

/* This is cumbersome as the tables point to eachother */
/* first insert organisms without identification foreign key */

/* Creates an empty temporary table matching the structure of the existing table, without constraints. */
CREATE TEMP TABLE tmp_x AS SELECT * FROM public.organism LIMIT 0;

/* copy the full content into temp table */
COPY tmp_x
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Organism/ORGANISM.csv' 
DELIMITER ',' 
CSV HEADER;

/* then insert partially into organisms */
INSERT INTO public.organism
SELECT organism_id, organism_scope
FROM tmp_x;

/* then insert identification */
COPY public.identification
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Identification/IDENTIFICATION.csv' 
DELIMITER ',' 
CSV HEADER;

/* then update the organism table with only the identification references */
UPDATE public.organism
SET    accepted_identification_id = tmp_x.accepted_identification_id
FROM   tmp_x
WHERE  public.organism.organism_id = tmp_x.organism_id;

/* drop the tempirary table */ 
DROP TABLE tmp_x;

COPY public.taxon_identification
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Taxon-identification/TAXON_IDENTIFICATION.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.entity_relationship(entity_relationship_id,depends_on_entity_relationship_id,subject_entity_id,entity_relationship_type,object_entity_id,object_entity_iri,entity_relationship_date,entity_relationship_order)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Entity relationship/ENTITY_RELATIONSHIP.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.location(location_id,parent_location_id,higher_geography_id,higher_geography,continent,water_body,island_group,island,country,country_code,state_province,county,municipality,locality,minimum_elevation_in_meters,maximum_elevation_in_meters,minimum_distance_above_surface_in_meters,maximum_distance_above_surface_in_meters,minimum_depth_in_meters,maximum_depth_in_meters,vertical_datum,location_according_to,location_remarks,accepted_georeference_id,accepted_geological_context_id)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/location/LOCATION.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.georeference
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Georeference/GEOREFERENCE.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.event(event_id,parent_event_id,dataset_id,location_id,protocol_id,event_type,event_name,field_number,event_date,year,month,day,verbatim_event_date,verbatim_locality,verbatim_elevation,verbatim_depth,verbatim_coordinates,verbatim_latitude,verbatim_longitude,verbatim_coordinate_system,verbatim_srs,habitat,protocol_description,sample_size_value,sample_size_unit,event_effort,field_notes,event_remarks)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Event/EVENT.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.citation
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Citation/CITATION.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.assertion(assertion_id,assertion_target_id,assertion_target_type,assertion_parent_assertion_id,assertion_type,assertion_made_date,assertion_effective_date,assertion_value,assertion_value_numeric,assertion_unit,assertion_by_agent_name,assertion_by_agent_id,assertion_protocol,assertion_protocol_id,assertion_remarks)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Assertion/ASSERTION.csv' 
DELIMITER ',' 
CSV HEADER;

/* FAILS - in the version of data I tried the data couldn't load into agent_roles and occurrences. That might have been fixed later on */

COPY public.agent_role
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Agent_role/AGENT_ROLE.csv' 
DELIMITER ',' 
CSV HEADER;

COPY public.occurrence(occurrence_id,organism_id,organism_quantity,organism_quantity_type,sex,life_stage,reproductive_condition,behavior,establishment_means,occurrence_status,pathway,degree_of_establishment,georeference_verification_status,occurrence_remarks,information_withheld,data_generalizations,recorded_by,recorded_by_id,associated_media,associated_occurrences,associated_taxa)
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Occurrence/OCCURRENCE.csv' 
DELIMITER ',' 
CSV HEADER;


/* DISCARDED - there is data in this table, but it was decided in an issue to not import the data anyhow */
COPY public.genetic_sequence
FROM '/Users/morten/Documents/dev/git/gbif/model-material/specify/Genetic_sequence/GENETIC_SEQUENCE.csv' 
DELIMITER ',' 
CSV HEADER;
