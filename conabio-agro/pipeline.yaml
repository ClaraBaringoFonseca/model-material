executor: parallel
clients:
  SQLDump: snib_client.get_client
tasks:
  - source: "{{siagro_folder}}/get_qualitative_measurements.py"
    name: get-siagro-qualitative
    product:
      nb: "{{here}}/get-siagro-qualitative.ipynb"
      data: "{{data_folder}}/assertions_qualitative.tsv"
  - source: "{{siagro_folder}}/get_quantitative_measurements.py"
    name: get-siagro-quantitative
    product:
      nb: "{{here}}/get-siagro-quantitative.ipynb"
      data: "{{data_folder}}/assertions_quantitative.tsv"
  - source: "{{siagro_folder}}/merge-assertions.py"
    name: merge-assertions
    product:
      nb: "{{here}}/merge-assertions.ipynb"
      data: "{{data_folder}}/assertion.tsv"
  - source: "{{siagro_folder}}/create-protocols.py"
    name: get-protocols 
    product:
      nb: "{{here}}/create-protocols.ipynb"
      protocol_data: "{{data_folder}}/protocol.tsv"
      references_data: "{{data_folder}}/reference.tsv"
      citations_data: "{{data_folder}}/citation.tsv"
  - source: "{{snib_folder}}/entitySNIB.sql"
    name: create-entity
    class: SQLDump
    chunksize: null
    product: "{{data_folder}}/csv/entity.csv"
  - source: "{{snib_folder}}/material_entitySNIB.sql"
    name: create-material-entity
    class: SQLDump
    chunksize: null
    product: "{{data_folder}}/csv/material_entity.csv"
  - source: "{{snib_folder}}/locationSNIB.sql"
    name: create-location
    class: SQLDump
    chunksize: null
    product: "{{data_folder}}/csv/location.csv"
  # - source: "{{snib_folder}}/occurrenceSNIB.sql"
  #   name: create-occurrences
  #   class: SQLDump
  #   product: "{{data_folder}}/occurrences"
  # - source: "{{snib_folder}}/taxonSNIB.sql"
  #   name: create-taxon
  #   class: SQLDump
  #   product: "{{data_folder}}/taxon"
  # - source: "{{snib_folder}}/identification.sql"
  #   name: create-identification
  #   class: SQLDump
  #   product: "{{data_folder}}/identification"
  # - source: "{{snib_folder}}/event.sql"
  #   name: create-event
  #   class: SQLDump
  #   product: "{{data_folder}}/event"
  - source: "script/process_sql.py"
    name: process-sql-outputs
    params:
      data_folder: "{{data_folder}}"
    product:
      nb: "{{here}}/process_sql.ipynb"
      log: "processed_steps.txt"
