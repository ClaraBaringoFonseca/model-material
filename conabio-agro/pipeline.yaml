executor: parallel
# clients:
#   SQLDump: snib_client.get_client
tasks:
  - source: "{{siagro_folder}}/get_qualitative_measurements.py"
    name: get-siagro-qualitative
    product:
      nb: "{{here}}/get-siagro-qualitative.ipynb"
      data: "{{data_folder}}/assertions_qualitative.tsv"
  - source: "{{siagro_folder}}/get_quantitative_measurements.py"
    name: get-siagro-quantitative
    product:
      nb: "{{here}}/get-siagro-quantitative.ipynb"
      data: "{{data_folder}}/assertions_quantitative.tsv"
  - source: "{{siagro_folder}}/merge-assertions.py"
    name: merge-assertions
    product:
      nb: "{{here}}/merge-assertions.ipynb"
      data: "{{data_folder}}/assertion.tsv"
  # - source: "{{snib_folder}}/entity.sql"
  #   name: create-entity
  #   class: SQLDump
  #   product: "{{data_folder}}/entity"
  # - source: "{{snib_folder}}/material_entity.sql"
  #   name: create-material-entity
  #   class: SQLDump
  #   product: "{{data_folder}}/material_entity"
  # - source: "{{snib_folder}}/localitySNIB.sql"
  #   name: create-locality
  #   class: SQLDump
  #   product: "{{data_folder}}/locality"
  # - source: "{{snib_folder}}/occurrenceSNIB.sql"
  #   name: create-occurrences
  #   class: SQLDump
  #   product: "{{data_folder}}/occurrences"
  # - source: "{{snib_folder}}/taxonSNIB.sql"
  #   name: create-taxon
  #   class: SQLDump
  #   product: "{{data_folder}}/taxon"
  # - source: "{{snib_folder}}/identification.sql"
  #   name: create-identification
  #   class: SQLDump
  #   product: "{{data_folder}}/identification"
  # - source: "{{snib_folder}}/event.sql"
  #   name: create-event
  #   class: SQLDump
  #   product: "{{data_folder}}/event"
